* audio transcoding:
  * AAC (http://www.audiocoding.com/)
  * mono support for all audio types

* file types
  * wmv (0.5.3)
  * asf
  * wma
  * vob (0.5.3)
  * vdr (0.5.3)
  
* handle multiple audio tracks
  create a virtual folder for a movie containing
  multiple audio tracks and list the tracks as items
  inside the folder

* playlist handling (0.5.4)
  * m3u
  * pls
  
* eventing (0.7)
* controlling

* ContentDirectory
  * Browse
    * Filter
    * Sort
  * update db
  ** send ContainerUpdateIDs and SystemUpdateID
  
  
* read file details after reading all shared dirs
  (for devices like Noxon, TG 100 all data is available more quick
   devices like e.g. the xbox must have the (reffering to upnp standard) "optional"
   information like genre, artist, etc.


* Freizugebende Dateitypen konfigurierbar
* option: versteckte/backup dateien ignorieren
* option: bestimmte Dateinamen ignorieren (bsp: .folder.png) (reg ex)
   
    
* ConnectionManager

* AVTransport

* database:
  * always insert original mime-types an set transcoding types if needed (0.7)
  * speedup inserts

* error handling on initialization
  * creating database
  * binding HTTP server (0.7)
  * etc...

* webinterface
  * add/remove allowed ips (0.5.3)
  * username/password
  * add/remove shared dirs (0.5.3)
  * set http port (0.5.3)
  * set ip address (0.5.3)  
  * check input values


* use inotify to refresh content db automatically
* maybe use gstreamer as optional transcoding backend

* check if fuppes is running as root and warn
* create own fuppes user
* configuration option: user and group to run as
* init script

* run without comand line
** (win32) systemtray icon
** (gnome) notification area
** (os x) menu tray icon

* presentation
** handle application/x-www-form-urlencoded althoug text/plain is requested (0.7)

* spoken error messages
  e.g. "error initializing LAME encoder"

* different settings for reqesting IPs
  e.g. playlist files for TG 100 but playlist containers for Noxon

* write pid file containing http url and pid to %tmp%
* write log to file (optional)
** temporary or static
** display in webinterface if available

* split folders containing a configurable amount of files

* podcast support
