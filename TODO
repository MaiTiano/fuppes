* audio transcoding:
  * AAC (http://www.audiocoding.com/)
  * mono support for all audio types

* file types
  * wmv (0.5.3)
  * asf
  * wma
  * vob (0.5.3)
  * vdr (0.5.3)
  
* handle multiple audio tracks
  create a virtual folder for a movie containing
  multiple audio tracks and list the tracks as items
  inside the folder

* playlist handling (0.5.4)
  * m3u
  * pls
  
* eventing (0.7)

* ContentDirectory
  * Browse
    * Filter
    * Sort
  * Search (device that supports search?)
  * update db
  ** send ContainerUpdateIDs and SystemUpdateID
  
  
  
  * virtuelle ordner
    * aufteilen nach namen
    - virtuellen ordner erstellen
      ID: 2^32 (bzw. size of unsigned int) - virt ordner anzahl
      name: bsp. A, B, C / A - C
    - reellen parent setzen (bsp. 1 für 'Alben')
    - unterordner setzen (object id reeller ordner)    
    - bei request browse = 1 virtuelle unterordner auflisten
    - bei request browse = 2^32 reelle unterordner auflisten
        
    - attribut an shared dir(s) (alle/einzeln), ob virtuelle ordner erstellt werden sollen
      und bis zu welcher verzeichnistiefe
      
    * aufteilen bei ChildCount > N
      - wenn ein reeller ordner eine dateianzahl > N
        enthält den Inhalt auf virtuelle Ordner "Ordnername"-Teil 1 - n aufteilen
      - konfigurierbar für alle und einzelne shared dirs
    
    * aufteilen nach attributen
      - bsp: genre, artist, dateityp, upnp-objekttyp,...
    
* EINSTELLUNGEN JE IP/HTTP USER-AGENT VARIABEL

* Freizugebende Dateitypen konfigurierbar
* option: versteckte/backup dateien ignorieren
* option: bestimmte Dateinamen ignorieren (bsp: .folder.png) (reg ex)

    
    
    
* ConnectionManager

* AVTransport

* database:
  * always insert original mime-types an set transcoding types if needed
  * speedup inserts

* error handling on initialization
  * creating database
  * binding HTTP server (0.7)
  * etc...

* webinterface
  * add/remove allowed ips (0.5.3)
  * username/password
  * add/remove shared dirs (0.5.3)
  * set http port (0.5.3)
  * set ip address (0.5.3)  
  * check input values


* use inotify to refresh content db automatically
* maybe use gstreamer as optional transcoding backend

* check if fuppes is running as root and warn
* create own fuppes user
* configuration option: user and group to run as
* init script

* run without comand line
** (win32) systemtray icon
** (gnome) notification area
** (os x) menu tray icon

* presentation
** handle application/x-www-form-urlencoded althoug text/plain is requested

* spoken error messages
  e.g. "error initializing LAME encoder"

* different settings for reqesting IPs
  e.g. playlist files for TG 100 but playlist containers for Noxon

* write pid file containing http url and pid to %tmp%
* write log to file (optional)
** temporary or static
** display in webinterface if available

* split folders containing a configurable amount of files

* podcast support
